{
  "name": "DSP Documentation Agent",
  "nodes": [
    {
      "parameters": {
        "path": "dsp-agent",
        "responseMode": "responseNode",
        "options": {
          "responseCode": 200
        }
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {},
      "id": "chat-trigger",
      "name": "Chat Trigger",
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1,
      "position": [250, 500]
    },
    {
      "parameters": {
        "functionCode": "// Parse the user's query\nconst userQuery = $input.first().json.query || \n                  $input.first().json.message || \n                  $input.first().json.text || \n                  'What is Dyson Sphere Program?';\n\n// Determine if this needs web search, RAG, or both\nconst needsWebSearch = userQuery.toLowerCase().includes('real') ||\n                      userQuery.toLowerCase().includes('actual') ||\n                      userQuery.toLowerCase().includes('physics') ||\n                      userQuery.toLowerCase().includes('cost') ||\n                      userQuery.toLowerCase().includes('current');\n\nconst needsGameInfo = userQuery.toLowerCase().includes('dsp') ||\n                     userQuery.toLowerCase().includes('game') ||\n                     userQuery.toLowerCase().includes('critical photon') ||\n                     userQuery.toLowerCase().includes('antimatter') ||\n                     userQuery.toLowerCase().includes('sphere');\n\nreturn {\n  query: userQuery,\n  needsWebSearch,\n  needsGameInfo,\n  timestamp: new Date().toISOString()\n};"
      },
      "id": "parse-query",
      "name": "Parse Query",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [450, 400]
    },
    {
      "parameters": {
        "resource": "command",
        "command": "=/Users/laura/Documents/github-projects/dyson-sphere-facts/docker/mcp-query.sh rag \"{{ $json.query }}\"",
        "cwd": "/Users/laura/Documents/github-projects/dyson-sphere-facts/docker",
        "authentication": "privateKey",
        "host": "={{ $credentials.dockerHost.host }}",
        "username": "={{ $credentials.dockerHost.username }}",
        "privateKey": "={{ $credentials.dockerHost.privateKey }}"
      },
      "id": "search-game-docs",
      "name": "Search Game Docs (RAG)",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [650, 300],
      "continueOnFail": true
    },
    {
      "parameters": {
        "resource": "command",
        "command": "=/Users/laura/Documents/github-projects/dyson-sphere-facts/docker/mcp-query.sh web \"{{ $json.query }}\"",
        "cwd": "/Users/laura/Documents/github-projects/dyson-sphere-facts/docker",
        "authentication": "privateKey",
        "host": "={{ $credentials.dockerHost.host }}",
        "username": "={{ $credentials.dockerHost.username }}",
        "privateKey": "={{ $credentials.dockerHost.privateKey }}"
      },
      "id": "search-web",
      "name": "Search Web",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [650, 500],
      "continueOnFail": true
    },
    {
      "parameters": {
        "model": "claude-3-5-sonnet-20241022",
        "messages": {
          "values": [
            {
              "role": "system",
              "content": "You are an expert physicist specializing in:\\n- Quantum physics and theoretical particle physics\\n- Interstellar travel, warp drives, and space logistics\\n- Mega-structure construction (Dyson spheres, swarms, shells)\\n- Matter-antimatter reactions and critical photon physics\\n- The Dyson Sphere Program game mechanics\\n\\nYou blend game mechanics with real physics speculation. Be fun and engaging, not boring or overly academic. Use metaphors like \\\"1 million International Space Stations\\\" for scale. Theorize boldly but ground speculation in actual physics and data from web searches.\\n\\nWhen discussing DSP, reference specific game items, buildings, and mechanics. When speculating about real physics, cite actual research when available.\\n\\nContext from game documentation:\\n{{ $node['Search Game Docs (RAG)'].json.results || 'No game documentation found.' }}\\n\\nContext from web search:\\n{{ $node['Search Web'].json.results || 'No web results found.' }}"
            },
            {
              "role": "user",
              "content": "={{ $json.query }}"
            }
          ]
        },
        "options": {
          "temperature": 0.8,
          "maxTokens": 2000
        }
      },
      "id": "claude-response",
      "name": "Claude Response",
      "type": "@n8n/n8n-nodes-langchain.lmChatAnthropic",
      "typeVersion": 1,
      "position": [850, 400]
    },
    {
      "parameters": {
        "functionCode": "// Format the response for output\nconst response = $input.first().json;\n\n// Extract the message content\nlet content = '';\nif (response.output) {\n  content = response.output;\n} else if (response.text) {\n  content = response.text;\n} else if (response.content) {\n  content = response.content;\n} else if (response.message) {\n  content = response.message;\n} else {\n  content = JSON.stringify(response);\n}\n\nreturn {\n  response: content,\n  timestamp: new Date().toISOString(),\n  query: $node['Parse Query'].json.query,\n  sources: {\n    gameDocsUsed: $node['Search Game Docs (RAG)'].json ? true : false,\n    webSearchUsed: $node['Search Web'].json ? true : false\n  }\n};"
      },
      "id": "format-response",
      "name": "Format Response",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [1050, 400]
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "respond-webhook",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1250, 300]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "Parse Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Chat Trigger": {
      "main": [
        [
          {
            "node": "Parse Query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Parse Query": {
      "main": [
        [
          {
            "node": "Search Game Docs (RAG)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Search Web",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Game Docs (RAG)": {
      "main": [
        [
          {
            "node": "Claude Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Search Web": {
      "main": [
        [
          {
            "node": "Claude Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Claude Response": {
      "main": [
        [
          {
            "node": "Format Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Format Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateId": "dsp-documentation-agent"
  },
  "pinData": {},
  "versionId": "1.0.0",
  "triggerCount": 2
}
